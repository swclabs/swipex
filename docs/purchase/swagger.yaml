basePath: /
definitions:
  dtos.Address:
    properties:
      city:
        type: string
      district:
        type: string
      id:
        type: integer
      street:
        type: string
      ward:
        type: string
    required:
    - city
    - district
    - id
    - street
    - ward
    type: object
  dtos.Cart:
    properties:
      cart_id:
        type: integer
      category:
        type: string
      code:
        type: string
      color:
        type: string
      currency_code:
        type: string
      image:
        type: string
      inventory_id:
        type: integer
      name:
        type: string
      price:
        type: string
      product_id:
        type: integer
      quantity:
        type: integer
      specs:
        $ref: '#/definitions/dtos.Specs'
    type: object
  dtos.CartDTO:
    properties:
      inventory_id:
        type: integer
      quantity:
        type: integer
    required:
    - inventory_id
    - quantity
    type: object
  dtos.Carts:
    properties:
      products:
        items:
          $ref: '#/definitions/dtos.Cart'
        type: array
      user_id:
        type: integer
    type: object
  dtos.Coupon:
    properties:
      code:
        type: string
      description:
        type: string
      discount:
        type: integer
      expired_at:
        type: string
      id:
        type: integer
    type: object
  dtos.CreateCoupon:
    properties:
      description:
        type: string
      discount:
        type: integer
      expired_at:
        type: string
      max_use:
        type: integer
      status:
        type: string
    required:
    - description
    - discount
    - expired_at
    - max_use
    - status
    type: object
  dtos.DeliveryAddress:
    properties:
      city:
        type: string
      district:
        type: string
      street:
        type: string
      user_id:
        type: integer
      ward:
        type: string
    required:
    - city
    - district
    - street
    - user_id
    - ward
    type: object
  dtos.DeliveryBody:
    properties:
      address_id:
        type: integer
      method:
        type: string
      note:
        type: string
      received_date:
        type: string
      sent_date:
        type: string
      status:
        type: string
      user_id:
        type: integer
    required:
    - address_id
    - method
    - status
    - user_id
    type: object
  dtos.OK:
    properties:
      msg:
        type: string
    type: object
  dtos.Order:
    properties:
      address:
        $ref: '#/definitions/dtos.OrderFormAddress'
      customer:
        $ref: '#/definitions/dtos.OrderFormCustomer'
      delivery:
        $ref: '#/definitions/dtos.OrderFormDelivery'
      product:
        items:
          $ref: '#/definitions/dtos.OrderFormProduct'
        type: array
    required:
    - address
    - customer
    - delivery
    - product
    type: object
  dtos.OrderForm:
    properties:
      address:
        $ref: '#/definitions/dtos.OrderFormAddress'
      customer:
        $ref: '#/definitions/dtos.OrderFormCustomer'
      delivery:
        $ref: '#/definitions/dtos.OrderFormDelivery'
      product:
        items:
          $ref: '#/definitions/dtos.OrderFormProduct'
        type: array
    required:
    - address
    - customer
    - delivery
    - product
    type: object
  dtos.OrderFormAddress:
    properties:
      city:
        type: string
      district:
        type: string
      street:
        type: string
      ward:
        type: string
    required:
    - city
    - district
    - street
    - ward
    type: object
  dtos.OrderFormCustomer:
    properties:
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      phone:
        type: string
    required:
    - email
    - first_name
    - last_name
    - phone
    type: object
  dtos.OrderFormDelivery:
    properties:
      method:
        type: string
      note:
        type: string
      sent_date:
        type: string
      status:
        type: string
    required:
    - method
    - status
    type: object
  dtos.OrderFormProduct:
    properties:
      code:
        type: string
      quantity:
        type: integer
    required:
    - code
    - quantity
    type: object
  dtos.OrderInfo:
    properties:
      address:
        $ref: '#/definitions/dtos.OrderFormAddress'
      delivery:
        $ref: '#/definitions/dtos.OrderFormDelivery'
      items:
        items:
          $ref: '#/definitions/model.Order'
        type: array
      time:
        type: string
      user:
        $ref: '#/definitions/dtos.OrderFormCustomer'
      uuid:
        type: string
    type: object
  dtos.ProductResponse:
    properties:
      category:
        type: string
      created:
        type: string
      description:
        type: string
      id:
        type: integer
      image:
        type: string
      name:
        type: string
      price:
        type: string
      status:
        type: string
    type: object
  dtos.Specs:
    properties:
      connection:
        type: string
      desc:
        type: string
      ram:
        type: string
      ssd:
        type: string
    type: object
  model.Order:
    properties:
      category_id:
        type: integer
      color:
        type: string
      currency_code:
        type: string
      image:
        type: string
      item_specs:
        type: string
      name:
        type: string
      quantity:
        type: integer
      total_amount:
        type: number
    type: object
  xdto.CreateOrderDTO:
    properties:
      client_order_code:
        maxLength: 50
        type: string
      cod_amount:
        maximum: 50000000
        type: integer
      content:
        maxLength: 2000
        type: string
      coupon:
        type: string
      from_address:
        maxLength: 1024
        type: string
      from_district_name:
        type: string
      from_name:
        maxLength: 1024
        type: string
      from_phone:
        type: string
      from_province_name:
        type: string
      from_ward_name:
        type: string
      height:
        maximum: 200
        type: integer
      insurance_value:
        maximum: 5000000
        type: integer
      items:
        items:
          $ref: '#/definitions/xdto.OrderItem'
        type: array
      length:
        maximum: 200
        type: integer
      note:
        maxLength: 5000
        type: string
      payment_type_id:
        type: integer
      pick_shift:
        type: string
      pick_station_id:
        type: integer
      required_note:
        enum:
        - CHOTHUHANG
        - CHOXEMHANGKHONGTHU
        - KHONGCHOXEMHANG
        type: string
      return_address:
        maxLength: 1024
        type: string
      return_district_id:
        type: integer
      return_phone:
        type: string
      return_ward_code:
        type: string
      service_type_id:
        type: integer
      shop_id:
        type: integer
      to_address:
        maxLength: 1024
        type: string
      to_district_id:
        type: integer
      to_name:
        maxLength: 1024
        type: string
      to_phone:
        type: string
      to_ward_code:
        type: string
      token:
        type: string
      weight:
        maximum: 50000
        type: integer
      width:
        maximum: 200
        type: integer
    required:
    - from_address
    - from_district_name
    - from_name
    - from_phone
    - from_province_name
    - from_ward_name
    - height
    - items
    - length
    - payment_type_id
    - required_note
    - service_type_id
    - shop_id
    - to_address
    - to_district_id
    - to_name
    - to_phone
    - to_ward_code
    - token
    - weight
    - width
    type: object
  xdto.Data:
    properties:
      district_encode:
        type: string
      expected_delivery_time:
        type: string
      fee:
        $ref: '#/definitions/xdto.Fee'
      order_code:
        type: string
      sort_code:
        type: string
      total_fee:
        type: string
      trans_type:
        type: string
      ward_encode:
        type: string
    type: object
  xdto.District:
    properties:
      Code:
        type: string
      DistrictID:
        type: integer
      DistrictName:
        type: string
      ProvinceID:
        type: integer
      SupportType:
        type: integer
      Type:
        type: integer
    type: object
  xdto.DistrictDTO:
    properties:
      code:
        type: integer
      data:
        items:
          $ref: '#/definitions/xdto.District'
        type: array
      message:
        type: string
    type: object
  xdto.Fee:
    properties:
      coupon:
        type: integer
      insurance:
        type: integer
      main_service:
        type: integer
      r2s:
        type: integer
      return:
        type: integer
      station_do:
        type: integer
      station_pu:
        type: integer
    type: object
  xdto.Log:
    properties:
      status:
        type: string
      updated_date:
        type: string
    type: object
  xdto.OrderDTO:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/xdto.Data'
      message:
        type: string
    type: object
  xdto.OrderInfo:
    properties:
      _id:
        type: string
      client_id:
        type: integer
      client_order_code:
        type: string
      cod_amount:
        type: integer
      cod_collect_date:
        type: string
      cod_failed_amount:
        type: integer
      cod_failed_collect_date:
        type: string
      cod_transfer_date:
        type: string
      content:
        type: string
      converted_weight:
        type: integer
      coupon:
        type: string
      created_client:
        type: integer
      created_date:
        type: string
      created_employee:
        type: integer
      created_ip:
        type: string
      created_source:
        type: string
      current_warehouse_id:
        type: integer
      custom_service_fee:
        type: integer
      deliver_station_id:
        type: integer
      deliver_warehouse_id:
        type: integer
      employee_note:
        type: string
      finish_date:
        type: string
      from_address:
        type: string
      from_district_id:
        type: integer
      from_name:
        type: string
      from_phone:
        type: string
      from_ward_code:
        type: string
      height:
        type: integer
      insurance_value:
        type: integer
      is_cod_collected:
        type: boolean
      is_cod_transferred:
        type: boolean
      leadtime:
        type: string
      length:
        type: integer
      log:
        items:
          $ref: '#/definitions/xdto.Log'
        type: array
      next_warehouse_id:
        type: integer
      note:
        type: string
      order_code:
        type: string
      order_date:
        type: string
      order_value:
        type: integer
      payment_type_id:
        type: integer
      pick_station_id:
        type: integer
      pick_warehouse_id:
        type: integer
      required_note:
        type: string
      return_address:
        type: string
      return_district_id:
        type: integer
      return_name:
        type: string
      return_phone:
        type: string
      return_ward_code:
        type: string
      return_warehouse_id:
        type: integer
      service_id:
        type: integer
      service_type_id:
        type: integer
      shop_id:
        type: integer
      soc_id:
        type: string
      status:
        type: string
      tag:
        items:
          type: string
        type: array
      to_address:
        type: string
      to_district_id:
        type: integer
      to_name:
        type: string
      to_phone:
        type: string
      to_ward_code:
        type: string
      updated_client:
        type: integer
      updated_date:
        type: string
      updated_employee:
        type: integer
      updated_ip:
        type: string
      updated_source:
        type: string
      updated_warehouse:
        type: integer
      version_no:
        type: string
      weight:
        type: integer
      width:
        type: integer
    type: object
  xdto.OrderInfoDTO:
    properties:
      code:
        type: integer
      data:
        items:
          $ref: '#/definitions/xdto.OrderInfo'
        type: array
      message:
        type: string
    type: object
  xdto.OrderItem:
    properties:
      category:
        type: string
      code:
        type: string
      height:
        type: integer
      length:
        type: integer
      name:
        type: string
      price:
        type: integer
      quantity:
        type: integer
      weight:
        type: integer
      width:
        type: integer
    required:
    - name
    - quantity
    - weight
    type: object
  xdto.Province:
    properties:
      Code:
        type: string
      ProvinceID:
        type: integer
      ProvinceName:
        type: string
    type: object
  xdto.ProvinceDTO:
    properties:
      code:
        type: integer
      data:
        items:
          $ref: '#/definitions/xdto.Province'
        type: array
      message:
        type: string
    type: object
  xdto.Ward:
    properties:
      DistrictID:
        type: integer
      WardCode:
        type: string
      WardName:
        type: string
    type: object
  xdto.WardDTO:
    properties:
      code:
        type: integer
      data:
        items:
          $ref: '#/definitions/xdto.Ward'
        type: array
      message:
        type: string
    type: object
info:
  contact: {}
  description: This is a documentation for the Swipe API
  title: Swipe Public API v0.0.1
  version: 0.0.1
paths:
  /address:
    get:
      consumes:
      - application/json
      description: get address delivery.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dtos.Address'
            type: array
      tags:
      - address
    post:
      consumes:
      - application/json
      description: create address delivery.
      parameters:
      - description: address request
        in: body
        name: addr
        required: true
        schema:
          $ref: '#/definitions/dtos.DeliveryAddress'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dtos.ProductResponse'
            type: array
      tags:
      - address
  /address/district:
    get:
      consumes:
      - application/json
      description: get district by province ID.
      parameters:
      - description: province id
        in: query
        name: province_id
        required: true
        type: number
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/xdto.DistrictDTO'
      tags:
      - address
  /address/province:
    get:
      consumes:
      - application/json
      description: get province
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/xdto.ProvinceDTO'
      tags:
      - address
  /address/ward:
    get:
      consumes:
      - application/json
      description: get ward by district ID.
      parameters:
      - description: district id
        in: query
        name: district_id
        required: true
        type: number
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/xdto.WardDTO'
      tags:
      - address
  /delivery:
    get:
      consumes:
      - application/json
      description: get delivery info by user id.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.OK'
      tags:
      - delivery
    post:
      consumes:
      - application/json
      description: create delivery info.
      parameters:
      - description: delivery info request
        in: body
        name: addr
        required: true
        schema:
          $ref: '#/definitions/dtos.DeliveryBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.OK'
      tags:
      - delivery
  /delivery/order:
    post:
      consumes:
      - application/json
      description: create order delivery.
      parameters:
      - description: order delivery body request
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/xdto.CreateOrderDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/xdto.OrderDTO'
      tags:
      - delivery
  /delivery/order/{code}:
    get:
      consumes:
      - application/json
      description: get delivery order details by order code.
      parameters:
      - description: delivery order code
        in: path
        name: code
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/xdto.OrderInfoDTO'
      tags:
      - delivery
  /purchase/admin/orders:
    post:
      consumes:
      - application/json
      description: create order.
      parameters:
      - description: order delivery body request
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/dtos.OrderForm'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.OK'
      tags:
      - delivery
  /purchase/carts:
    get:
      consumes:
      - application/json
      description: get list of items from carts
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.Carts'
      tags:
      - purchase
    post:
      consumes:
      - application/json
      description: add item to carts.
      parameters:
      - description: cart insert request
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/dtos.CartDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.OK'
      tags:
      - purchase
  /purchase/carts/{type}:
    delete:
      consumes:
      - application/json
      description: delete item from carts
      parameters:
      - description: product type
        in: path
        name: type
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.OK'
      tags:
      - purchase
  /purchase/coupons:
    get:
      consumes:
      - application/json
      description: get coupon.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dtos.Coupon'
            type: array
      tags:
      - purchase
    post:
      consumes:
      - application/json
      description: create coupon.
      parameters:
      - description: coupon request
        in: body
        name: coupon
        required: true
        schema:
          $ref: '#/definitions/dtos.CreateCoupon'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.OrderInfo'
      tags:
      - purchase
  /purchase/coupons/{code}:
    get:
      consumes:
      - application/json
      description: get coupon.
      parameters:
      - description: coupons code
        in: path
        name: code
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.OK'
      tags:
      - purchase
  /purchase/orders:
    get:
      consumes:
      - application/json
      description: get list of orders.
      parameters:
      - description: limit order
        in: query
        name: limit
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dtos.OrderInfo'
            type: array
      tags:
      - purchase
    post:
      consumes:
      - application/json
      description: create order.
      parameters:
      - description: order insert request
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/dtos.Order'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.OK'
      tags:
      - purchase
  /purchase/orders/{code}:
    get:
      consumes:
      - application/json
      description: get order by code.
      parameters:
      - description: order code
        in: path
        name: code
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.OrderInfo'
      tags:
      - delivery
swagger: "2.0"
